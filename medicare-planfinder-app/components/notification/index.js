/**
 * @provideModule Notification Service
 */

import PushNotification from 'react-native-push-notification';
import NotificationHandler from './NotificationHandler';


//=========These are are predefined notification In case firbase has some error ========//
const scheduledNotificationArray = [
    {
        message:"Rate this App or write a review",
        id:1,
        interval:34,
        fireDate:new Date(Date.now() + 604800 * 1000),
        repeatTime: 7,
        repeatType: "day",
        type:"week"
    },

    {
        message:"Medicare Beneficiaries new to Medicare receive a $15 Darden gift card after completing the Medicare FactFinder®. consultation.",
        id:7,
        interval:34,
        //fireDate:new Date(Date.now() + 8 * 1000),
        fireDate:new Date(Date.now() + 86400 * 1000),
        repeatTime: 1,
        repeatType: "day",
        type:"day"
    },
    {
        message:"Complete the Medicare FactFinder®. for help selecting your most suitable Medicare plan during Annual Enrollment Period.",
        id:3,
        interval:34,
        fireDate:new Date(Date.now() + 604800 * 1000),
        repeatTime: 1,
        repeatType: "week",
        type:"week"
    },
    {
        message:"Medicare Eligible family and friends will thank you for helping them download the Medicare PlanFinder®. Mobile App.",
        id:4,
        interval:34,
        fireDate:new Date(Date.now() + 3600* 1000),
        repeatTime: 1,
        repeatType: "month",
        type :"hour"
    },
    {
        message:"Have questions about rolling over your 401(k) or 403(b) retirement account? Complete the Financial FactFinder.",
        id:5,
        interval:34,
        fireDate:new Date(Date.now() +  2*86400* 1000),
        repeatTime: 1,
        repeatType: "day",
        type:"day"
    },

];
//==================Notification service Class============================//
export default class NotifService {

    //==================Construct the notification service ===================//
    constructor(onRegister, onNotification) {
        this.lastId = 0;
        NotificationHandler.attachRegister(onRegister);
        NotificationHandler.attachNotification(onNotification);

        // Clear badge number at start
        PushNotification.getApplicationIconBadgeNumber(function (number) {
            if (number > 0) {
                PushNotification.setApplicationIconBadgeNumber(0);
            }
        });

        PushNotification.getChannels(function(channels) {
            console.log(channels);
        });
        this.getScheduledLocalNotifications(e=>{

        })
    }
    //===========================Scheduling notifications ==========================//
    scheduleNotification = (array)=>{
        scheduledNotificationArray.forEach(object=>{
          this.createNotification(object)
      });
    };
    //=========================Create Notifications ============================//
    createNotification(data) {
        const {
            message,
            id,
            interval,
            fireDate,
            repeatTime,
            repeatType,} = data;
        this.lastId++;
        PushNotification.localNotificationSchedule({
            date: new Date (fireDate?fireDate:Date.now()+8640*1000),
            /* Android Only Properties */
            id: this.lastId, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
            ticker: 'Medicare fact finder', // (optional)
            autoCancel: true, // (optional) default: true
            largeIcon: 'ic_launcher', // (optional) default: "ic_launcher"
            smallIcon: 'ic_launcher', // (optional) default: "ic_notification" with fallback for "ic_launcher"
            bigText: message, // (optional) default: "message" prop
            subText: '', // (optional) default: none
            color: 'white', // (optional) default: system default
            vibrate: true, // (optional) default: true
            vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
            tag: 'some_tag', // (optional) add tag to message
            group: 'group', // (optional) add group to message
            ongoing: false, // (optional) set whether this is an "ongoing" notification
            //actions: ['Okay', 'Cancel'], // (Android only) See the doc for notification actions to know more
            invokeApp: true, // (optional) This enable click on actions to bring back the application to foreground or stay in background, default: true

            /* iOS only properties */
            alertAction: 'view', // (optional) default: view
            category: '', // (optional) default: empty string
            userInfo: {}, // (optional) default: {} (using null throws a JSON value '<null>' error)
            repeatType: repeatType,
            repeatTime:repeatTime,
            /* iOS and Android properties */
            title: 'Medicare Fact Finder', // (optional)
            message: message, // (required)
            playSound: true, // (optional) default: true
            soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
            //number: 10, // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
        });
    }
    //===================These all methods to apply utilities and grant permission =============//
    checkPermission= (cbk)=> {
        return PushNotification.checkPermissions(cbk);
    };

    requestPermissions=()=> {
        return PushNotification.requestPermissions();
    };

    cancelNotif=()=> {
        PushNotification.cancelLocalNotifications({id: '' + this.lastId});
    };

    cancelAll=()=> {
        PushNotification.cancelAllLocalNotifications();
    };

    abandonPermissions=()=> {
        PushNotification.abandonPermissions();
    }

    //====================Getting scheduled notifications =================//
    getScheduledLocalNotifications=(callback) =>{
        PushNotification.getScheduledLocalNotifications(callback);
    }
}
